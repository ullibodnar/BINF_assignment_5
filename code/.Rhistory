geom_tile(color = "white") +
scale_fill_gradient(low = "yellow", high = "red", na.value = "grey") +
facet_wrap(~ trimLeft) +
labs(
title = "Heatmap of Richness by Truncation Lengths and Trim Levels",
x = "Forward Truncation Length (truncLenF)",
y = "Reverse Truncation Length (truncLenR)",
fill = "Richness"
) +
theme_minimal()
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "blue", high = "red", na.value = "grey") +
facet_wrap(~ trimLeft) +
labs(
title = "Heatmap of Richness by Truncation Lengths and Trim Levels",
x = "Forward Truncation Length (truncLenF)",
y = "Reverse Truncation Length (truncLenR)",
fill = "Richness"
) +
theme_minimal()
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "blue", high = "red", na.value = "grey") +
facet_wrap(~ maxEE + trimLeft) +
labs(
title = "Heatmap of Richness by Truncation Lengths and Trim Levels",
x = "Forward Truncation Length (truncLenF)",
y = "Reverse Truncation Length (truncLenR)",
fill = "Richness"
) +
theme_minimal()
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = shannon)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Shannon Diversity\n(NA in grey)"
) +
labs(
title = "Heatmap of Shannon Diversity by Parameter Combinations",
x = "Forward Truncation Length",
y = "Reverse Truncation Length",
fill = "Shannon Diversity"
) +
theme_minimal()
# Plot richness and shannon -----------------------------------------------------------
# Plot richness by forward and reverse truncation
ggplot(results_df, aes(x = truncLenF, y = richness, color = factor(trimLeft))) +
geom_line(size = 1) +
geom_point(size = 3) +
facet_wrap(~ truncLenR, scales = "free_y") +
labs(
title = "Impact of Forward and Reverse Truncation Lengths on Richness",
x = "Forward Truncation Length (truncLenF)",
y = "Richness",
color = "Trim Left"
) +
theme_minimal() +
annotate("rect", xmin = 220, xmax = 240, ymin = -Inf, ymax = Inf, alpha = 0.2, fill = "blue") +
annotate("text", x = 220, y = 85, label = "Significant Region", size = 4)
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "blue", high = "red", na.value = "grey") +
facet_wrap(~ maxEE + trimLeft) +
labs(
title = "Heatmap of Richness by Truncation Lengths and Trim Levels",
x = "Forward Truncation Length (truncLenF)",
y = "Reverse Truncation Length (truncLenR)",
fill = "Richness"
) +
theme_minimal()
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Richness\n (NA in Grey)"
) +
labs(
title = "Heatmap of Richness by Parameter Combinations",
x = "Forward Truncation Length",
y = "Reverse Truncation Length",
fill = "Richness"
) +
theme_minimal()
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = shannon)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Shannon Diversity\n(NA in Grey)"
) +
labs(
title = "Heatmap of Shannon Diversity by Parameter Combinations",
x = "Forward Truncation Length",
y = "Reverse Truncation Length",
fill = "Shannon Diversity"
) +
theme_minimal()
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Richness\n (NA in Grey)"
) +
labs(
title = "Heatmap of Richness by Parameter Combinations",
x = "Forward Truncation Length",
y = "Reverse Truncation Length",
fill = "Richness"
) +
theme_minimal()
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Richness\n (NA in Grey)"
) +
labs(
title = "Heatmap of Richness by Parameter Combinations",
x = "Forward Truncation Length",
y = "Reverse Truncation Length",
fill = "Richness"
) +
theme_minimal(base_size = 14)
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Richness\n (NA in Grey)"
) +
labs(
title = "Heatmap of Richness by Parameter Combinations",
x = "Forward Truncation Length",
y = "Reverse Truncation Length",
fill = "Richness"
) +
theme_minimal(base_size = 14)
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = shannon)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Shannon Diversity\n(NA in Grey)"
) +
labs(
title = "Heatmap of Shannon Diversity by Parameter Combinations",
x = "Forward Truncation Length",
y = "Reverse Truncation Length",
fill = "Shannon Diversity"
) +
theme_minimal(base_size = 14)
results_df |>
mutate(failed = is.na(richness)) |>
group_by(failed) |>
summarise(count = n()) |>
ggplot(aes(x = failed, y = count, fill = failed)) +
geom_bar(stat = "identity") +
labs(
title = "Counts of Parameter Combinations with Failed Filtering",
x = "Failed Filtering (NA)",
y = "Count",
fill = "Failed"
) +
theme_minimal()
results_df <- results_df |>
mutate(
n_ASVs = map_dbl(results, ~ ifelse(is.null(.x$richness), NA, ncol(makeSequenceTable(.x))))
)
results
results_df <- results_df |>
mutate(
n_ASVs = map_dbl(results, ~ ifelse(is.null(.x$richness), NA, ncol(makeSequenceTable(.x))))
)
# Read in data
results_df1 <- read.csv("../data/results/results_with_diversity_metrics.csv")
View(results_df)
View(results_df1)
View(results_df)
View(results_df1)
# Read in data
results_df <- read.csv("../data/results/results_with_diversity_metrics.csv")
results_df <- results_df |>
mutate(
n_ASVs = map_dbl(results, ~ ifelse(is.null(.x$richness), NA, ncol(makeSequenceTable(.x))))
)
results_df |>
group_by(maxEE, trimLeft) |>
summarise(
mean_richness = mean(richness, na.rm = TRUE),
mean_shannon = mean(shannon, na.rm = TRUE),
.groups = "drop"
)
results_df <- results_df |>
mutate(
n_ASVs = map_dbl(results, ~ ifelse(is.null(.x$richness), NA, ncol(makeSequenceTable(.x))))
)
# Pull in the data as matched lists
forwardList <- path |>
list.files(pattern = "_R1_001.fastq", full.names = TRUE) |>
sort()
# Pull in the data as matched lists
forwardList <- path |>
list.files(pattern = "_R1_001.fastq", full.names = TRUE) |>
sort()
reverseList <- path |>
list.files(pattern = "_R2_001.fastq", full.names = TRUE) |>
sort()
# From the help for the plotQualityProfile function: "The plotted lines show positional summary statistics: green is the mean, orange is the median, and the dashed orange lines are the 25th and 75th quantiles."
#plot quality of forward sequences
plotQualityProfile(forwardList)
# Path to data
path <- "../data/MiSeq_SOP"
list.files(path) # Check that they are all there :')
# Pull in the data as matched lists
forwardList <- path |>
list.files(pattern = "_R1_001.fastq", full.names = TRUE) |>
sort()
head(forwardList)
reverseList <- path |>
list.files(pattern = "_R2_001.fastq", full.names = TRUE) |>
sort()
head(reverseList)
# From the help for the plotQualityProfile function: "The plotted lines show positional summary statistics: green is the mean, orange is the median, and the dashed orange lines are the 25th and 75th quantiles."
#plot quality of forward sequences
plotQualityProfile(forwardList) +
ggtitle("Sequence Quality Profiles of Forward Reads") +
theme_minimal(base_size = 14) +  # Adjust text size to match other figures
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")  # Center and enlarge the title
)
#plot quality of reverse sequences
plotQualityProfile(reverseList) +
ggtitle("Sequence Quality Profiles of Forward Reads") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
#plot quality of reverse sequences
plotQualityProfile(reverseList) +
ggtitle("Sequence Quality Profiles of Reverse Reads") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
# From the help for the plotQualityProfile function: "The plotted lines show positional summary statistics: green is the mean, orange is the median, and the dashed orange lines are the 25th and 75th quantiles."
#plot quality of forward sequences
# When inspecting the quality of the forward and reverse sequences, it is clear that the reverse typically drop off in quality much faster than the forward reads, therefore we will often trim the forward reads at 240, and the reverse at 200. It is also recommended to trim the initial reads as well since calibration issues can cause them to be problematic. The ambiguous nucleotides are filtered out with maxN = 0, and the reads with more than 2 expected errors are filtered out as well.
plotQualityProfile(forwardList) +
ggtitle("Sequence Quality Profiles of Forward Reads") +
xlab("Base Position (bp)") +  # Adding units for base positions
ylab("Quality Score (Phred Score)") +  # Adding units for quality score
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
# Plot quality of reverse sequences
plotQualityProfile(reverseList) +
ggtitle("Sequence Quality Profiles of Reverse Reads") +
xlab("Base Position (bp)") +
ylab("Quality Score (Phred Score)") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
# Plot quality of forward sequences
plotQualityProfile(forwardList) +
ggtitle("Sequence Quality Profiles of Forward Reads") +
xlab("Base Position (bp)") +
ylab("Quality Score (Phred Score)") +
scale_color_manual(
values = c(
"mean" = "#0072B2",     # Blue for mean
"median" = "#D55E00",   # Orange for median
"25th-75th" = "#009E73" # Green for quantiles (adjust if necessary)
),
name = "Summary Statistics", # Legend title
labels = c("Mean", "Median", "25th-75th Quantiles") # Legend labels
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
# Plot quality of forward sequences
plotQualityProfile(forwardList) +
ggtitle("Sequence Quality Profiles of Forward Reads") +
xlab("Base Position (bp)") +
ylab("Quality Score (Phred Score)") +
scale_color_manual(
values = c(
"mean" = "#0072B2",     # Blue for mean
"median" = "purple",   # Orange for median
"25th-75th" = "#009E73" # Green for quantiles (adjust if necessary)
),
name = "Summary Statistics", # Legend title
labels = c("Mean", "Median", "25th-75th Quantiles") # Legend labels
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
# Plot quality of forward sequences
plotQualityProfile(forwardList) +
ggtitle("Sequence Quality Profiles of Forward Reads") +
xlab("Base Position (bp)") +
ylab("Quality Score (Phred Score)") +
scale_color_manual(
values = c(
"mean" = "#0072B2",     # Blue for mean
"median" = "purple",   # Orange for median
"25th-75th" = "black" # Green for quantiles (adjust if necessary)
),
name = "Summary Statistics", # Legend title
labels = c("Mean", "Median", "25th-75th Quantiles") # Legend labels
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
# Subset data to exclude rows with NA
clean_results <- results_df |>
filter(!is.na(richness) & !is.na(shannon))
# Test the effect of parameters on Shannon diversity using ANOVA
anova_shannon <- aov(shannon ~ truncLenF * truncLenR * maxEE * trimLeft, data = clean_results)
summary(anova_shannon)
# Test the effect of parameters on Richness using ANOVA
anova_richness <- aov(richness ~ truncLenF * truncLenR * maxEE * trimLeft, data = clean_results)
summary(anova_richness)
# Alternative: Fit a linear model for Shannon diversity
lm_shannon <- lm(shannon ~ truncLenF + truncLenR + maxEE + trimLeft, data = clean_results)
summary(lm_shannon)
parameters
# Plot richness by forward and reverse truncation
ggplot(results_df, aes(x = truncLenF, y = richness, color = factor(trimLeft))) +
geom_line(size = 1) +
geom_point(size = 3) +
facet_wrap(~ truncLenR, scales = "free_y") +
labs(
title = "Impact of Forward and Reverse Truncation Lengths on Richness",
x = "Forward Truncation Length (truncLenF)",
y = "Richness",
color = "Trim Left"
) +
theme_minimal() +
annotate("rect", xmin = 220, xmax = 240, ymin = -Inf, ymax = Inf, alpha = 0.2, fill = "blue") +
annotate("text", x = 220, y = 85, label = "Significant Region", size = 4)
# Plot a heatmap of richness by parameter combinations
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Richness\n (NA in Grey)"
) +
labs(
title = "Heatmap of Richness by Parameter Combinations",
x = "Forward Truncation Length (bp)",
y = "Reverse Truncation Length (bp)",
fill = "Richness"
) +
theme_minimal(base_size = 14)
# Plot a heatmap of shannon diversity by parameter combinations
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = shannon)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Shannon Diversity\n(NA in Grey)"
) +
labs(
title = "Heatmap of Shannon Diversity by Parameter Combinations",
x = "Forward Truncation Length (bp)",
y = "Reverse Truncation Length (bp)",
fill = "Shannon Diversity"
) +
theme_minimal(base_size = 14)
# Test the effect of parameters on Shannon diversity using ANOVA
anova_shannon <- aov(shannon ~ truncLenF * truncLenR * maxEE * trimLeft, data = clean_results)
shannon_summary <- summary(anova_shannon)
shannon_df <- as.data.frame(shannon_summary[[1]])
shannon_df
view(shannon_df)
write.csv(shannon_df, "../data/results/anova_shannon_summary.csv")
# Test the effect of parameters on Richness using ANOVA
anova_richness <- aov(richness ~ truncLenF * truncLenR * maxEE * trimLeft, data = clean_results)
richness_summary <- summary(anova_richness)
richness_df <- as.data.frame(richness_summary[[1]])
write.csv(richness_df, "../data/results/anova_richness_summary.csv")
view(richness_df)
view(shannon_df)
# Plot a heatmap of richness by parameter combinations
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "blue",
high = "red",
na.value = "grey",
name = "Richness\n (NA in Grey)"
) +
labs(
title = "Heatmap of Richness by Parameter Combinations",
x = "Forward Truncation Length (bp)",
y = "Reverse Truncation Length (bp)",
fill = "Richness"
) +
theme_minimal(base_size = 14)
# Plot a heatmap of richness by parameter combinations
ggplot(results_df, aes(x = truncLenF, y = truncLenR, fill = richness)) +
geom_tile(color = "white") +
facet_wrap(
~ maxEE + trimLeft,
labeller = labeller(
maxEE = function(value) paste("Error Limit =", value),  # Rename maxEE
trimLeft = function(value) paste("Trimmed Bases =", value)  # Rename trimLeft
)
) +
scale_fill_gradient(
low = "red",
high = "blue",
na.value = "grey",
name = "Richness\n (NA in Grey)"
) +
labs(
title = "Heatmap of Richness by Parameter Combinations",
x = "Forward Truncation Length (bp)",
y = "Reverse Truncation Length (bp)",
fill = "Richness"
) +
theme_minimal(base_size = 14)
